{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/doctor-portal-component/doctor-portal-component.component.ts","./src/app/doctor-portal-component/doctor-portal-component.component.html","./src/app/patient-portal-component/patient-portal-component.component.ts","./src/app/patient-portal-component/patient-portal-component.component.html","./src/app/service/doctor-service.service.ts","./src/app/service/patient-service.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, HostListener, Inject, ViewChild } from '@angular/core';\nimport { NgxImageGalleryComponent, GALLERY_IMAGE, GALLERY_CONF } from \"ngx-image-gallery\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n welcome:boolean = true;\n doctor:boolean = false;\n patient:boolean = false;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  DoctorNavigate(){\n    (this.welcome)? this.welcome = false : this.welcome = true;\n    (this.doctor)? this.doctor = false : this.doctor = true;\n  }\n\n  PatientNavigate(){\n    (this.welcome)? this.welcome = false : this.welcome = true;\n    (this.patient)? this.patient = false : this.patient = true;\n  }\n\n  }\n","<div *ngIf=\"welcome\" id=\"intro\" class=\"wrapper row row-null\">\n  <div\n    class=\"doctor center-align col-xs-6 col-sm-6 col-md-6 col-lg-6 col-null\"\n  >\n    <div class=\"doctor-pic custom-card\" (click)=\"DoctorNavigate()\">\n      <div class=\"doctor-txt center-align\">\n        <h4>Doctor Portal</h4>\n      </div>\n    </div>\n  </div>\n  <div\n    class=\"patient center-align col-xs-6 col-sm-6 col-md-6 col-lg-6 col-null\"\n  >\n    <div class=\"patient-pic custom-card\" (click)=\"PatientNavigate()\">\n      <div class=\"patient-txt center-align\">\n        <h4>Patient Portal</h4>\n      </div>\n    </div>\n  </div>\n</div>\n\n<app-doctor-portal-component *ngIf=\"doctor\"></app-doctor-portal-component>\n<app-patient-portal-component *ngIf=\"patient\"></app-patient-portal-component>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxImageGalleryModule } from 'ngx-image-gallery';\nimport { DoctorPortalComponentComponent } from './doctor-portal-component/doctor-portal-component.component';\nimport { PatientPortalComponentComponent } from './patient-portal-component/patient-portal-component.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DoctorPortalComponentComponent,\n    PatientPortalComponentComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    NgxImageGalleryModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {DoctorServiceService} from '../service/doctor-service.service';\n\n@Component({\n  selector: 'app-doctor-portal-component',\n  templateUrl: './doctor-portal-component.component.html',\n  styleUrls: ['./doctor-portal-component.component.scss']\n})\nexport class DoctorPortalComponentComponent implements OnInit {\ndoctorNoData:boolean = false;\ndoctorName:any = \"\";\navailability:any = false;\nspecialist:any = \"\";\ndoctorList:any[] = [];\n  constructor(private _doctorServiceService : DoctorServiceService) { }\n\n  ngOnInit(): void {\n    this._doctorServiceService.getDoctorList().subscribe(res => {\n      let response: any = res;\n      this.doctorList = response;\n        console.log(\"res\",res);\n    },\n    error => {\n      this.doctorNoData = true;\n      console.log(\"err\",error.error.errorMessage);\n    });\n  }\n\n  doctorBack(){\n    window.location.reload();\n  }\n\n  addDoctor(){\n    let doctorObj = {\n      \"name\" : this.doctorName,\n      \"specialist\" : this.specialist,\n      \"availability\" : this.availability\n    }\n    this._doctorServiceService.addDoctor(doctorObj).subscribe(res => {\n      let response: any = res;\n      this.doctorList = response;\n      this.doctorNoData = false;\n        console.log(\"res\",this.doctorList);\n    });\n  }\n \n  updateDoctor(doctor){\n    console.log(\"doctor\",doctor);\n    let data = {\n      \"id\" : doctor.id,\n      \"name\" : doctor.name,\n      \"specialist\" : doctor.specialist,\n      \"availability\" : doctor.availability\n    };\n    this._doctorServiceService.updateDoctor(data).subscribe(res => {\n      let response: any = res;\n      this.doctorList = response;\n      alert(\"Doctor details successfully updated\");\n        console.log(\"res\",this.doctorList);\n    });\n  }\n\n  deleteDoctor(doctor){\n    console.log(\"doctor\",doctor);\n    confirm(\"Do you want to delete this record\");\n  this._doctorServiceService.deleteDoctor(doctor.id).subscribe(res => {\n    let response: any = res;\n    this.doctorList = response;\n    alert(\"Doctor details successfully deleted\");\n      console.log(\"res\",this.doctorList);\n  });\n  }\n}\n","<div class=\"custom-card back\" (click)=\"doctorBack()\">back</div>\n<div class=\"doctor-wrapper center-align\">\n    <div class=\"patient-detail\">\n        <form id=\"add-doctor\">\n            <h4>ADD DOCTOR</h4>\n            <div class=\"form-group\">\n                <input type=\"text\" placeholder=\"Name\" class=\"form-control\" name=\"doctorName\" id=\"doctorName\"\n                                [(ngModel)]=\"doctorName\" required>\n              </div>\n      <select name=\"availability\" [(ngModel)]=\"availability\">\n        <option  [ngValue]=true>Available</option>\n        <option  [ngValue]=false>Not Available</option>\n      </select>\n              <div class=\"form-group\">\n                <input type=\"text\" placeholder=\"Specialist\" class=\"form-control\" name=\"specialist\" [(ngModel)]=\"specialist\" title=\"eg: TB , Asthma\">\n      </div>\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"addDoctor()\" value=\"Submit\">Submit</button>\n  </form>\n  <h6>Doctor List</h6>\n  <div id=\"doctorList\" class=\"doctor-list custom-card\">\n      <div *ngIf=\"doctorNoData\">\n          <h4>No Doctors Available</h4>\n      </div>\n      <div *ngIf=\"!doctorNoData\">\n    <div *ngFor=\"let doctor of doctorList \" id=\"frame\">\n    <form class=\"row\">\n      <div class=\"form-group col-xs-3 col-sm-3 col-md-3 col-lg-3 col-null\">\n        <input type=\"text\" class=\"form-control\" name=\"name\" [(ngModel)]=\"doctor.name\">\n        </div>\n      <div class=\"dropdown col-xs-3 col-sm-3 col-md-3 col-lg-3 col-null\">\n        <select name=\"availability\" name=\"availability\" [(ngModel)]=\"doctor.availability\">\n            <option  [ngValue]=true>Available</option>\n            <option  [ngValue]=false>Not Available</option>\n          </select>\n      </div>\n      <div class=\"form-group col-xs-3 col-sm-3 col-md-3 col-lg-3 col-null\">\n        <input type=\"text\" class=\"form-control\" name=\"specialist\" [(ngModel)]=\"doctor.specialist\">\n        </div>\n        <div class=\"form-group col-xs-3 col-sm-3 col-md-3 col-lg-3\">\n            <button type=\"button\" class=\"btn btn-warning\" (click)=\"updateDoctor(doctor)\" value=\"Submit\">Update</button>&nbsp;\n            <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteDoctor(doctor)\" value=\"Submit\">Delete</button>\n        </div>\n    </form>\n    <div class=\"patient-list\">\n      <h4 *ngIf=\"!doctor.patientDetail\">No patient allocated</h4>\n      <div *ngIf=\"doctor.patientDetail\" class=\"row row-null\">\n        <div *ngFor=\"let patient of doctor.patientDetail\" class=\"patient-list-txt custom-card col-xs-3 col-sm-3 col-md-3 col-lg-3 col-null\">\n          <ul>\n          <li>Name : {{patient.name}}</li>\n          <li>Disease : {{patient.disease}}</li>\n          <li>History : {{patient.history}}</li>\n        </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n  </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DoctorServiceService } from '../service/doctor-service.service';\nimport { PatientServiceService } from '../service/patient-service.service';\n\n@Component({\n  selector: 'app-patient-portal-component',\n  templateUrl: './patient-portal-component.component.html',\n  styleUrls: ['./patient-portal-component.component.scss']\n})\nexport class PatientPortalComponentComponent implements OnInit {\n  disease:any = \"\";\n  doctorID:any = \"\";\n  dataChange:boolean = false;\n  name:any = \"\";\n  history:any = \"\";\n  patientList: any;\n  doctorList: any;\n  patientNoData: boolean = false;\n  constructor(private _patientServiceService: PatientServiceService,private _doctorServiceService : DoctorServiceService) { }\n\n  ngOnInit(): void {\n    this._patientServiceService.getPatientList().subscribe(res => {\n      let response: any = res;\n      this.patientList = response;\n        console.log(\"res\",res);\n    },\n    error => {\n      this.patientNoData = true;\n      console.log(\"err\",error.error.errorMessage);\n    });\n    this._doctorServiceService.getDoctorList().subscribe(res => {\n      let response: any = res;\n      this.doctorList = response;\n        console.log(\"res\",res);\n    },\n    error => {\n      alert(\"Please add a doctor before adding patient\");\n      console.log(\"err\",error.error.errorMessage);\n    });\n  }\n\n\n  addPatient(){\n    let patientObj = {\n      \"name\" : this.name,\n      \"doctorID\" : this.doctorID,\n      \"disease\" : this.disease,\n      \"history\" : this.history\n    }\n    this._patientServiceService.addPatient(patientObj).subscribe(res => {\n      let response: any = res;\n      this.patientList = response;\n      this.patientNoData = false;\n      console.log(\"patientList\",this.patientList);\n      alert(\"Patient details added successfully\");\n    });\n  }\n\n  updatePatient(patient){\n    let data = {\n      \"id\" : patient.id,\n      \"name\" : patient.name,\n      \"disease\" : patient.disease,\n      \"history\" : patient.history\n    };\n    this._patientServiceService.updatePatient(data).subscribe(res => {\n      let response: any = res;\n      this.patientList = response;\n      alert(\"Patient details successfully updated\");\n    });\n  }\n\n  doctorBack(){\n    window.location.reload();\n  }\n  \n  deletePatient(patient){\n    confirm(\"Do you want to delete this record\");\n    this._patientServiceService.deletePatient(patient.id).subscribe(res => {\n      let response: any = res;\n      this.patientList = response;\n      alert(\"Patient details successfully deleted\");\n      if(this.patientList.length == 0){\n        this.patientNoData = true;\n      }\n    });\n  }\n}\n","<div class=\"custom-card back\" (click)=\"doctorBack()\">back</div>\n<div class=\"doctor-wrapper center-align\">\n    <div class=\"patient-detail\">\n        <form id=\"add-doctor\">\n            <h4>ADD Patient</h4>\n            <div class=\"form-group\">\n                <input type=\"text\" placeholder=\"Name\" class=\"form-control\" name=\"name\" [(ngModel)]=\"name\">\n              </div>\n              <div class=\"form-group\">\n                <input type=\"text\" placeholder=\"Disease\" class=\"form-control\" name=\"disease\" [(ngModel)]=\"disease\">\n              </div>\n              <div class=\"form-group\">\n                <input type=\"text\" placeholder=\"History\" class=\"form-control\" name=\"history\" [(ngModel)]=\"history\">\n              </div>\n              <select name=\"availability\" [(ngModel)]=\"doctorID\">\n                <option  *ngFor=\"let doctor of doctorList\" [ngValue]=\"doctor.id\">{{doctor.specialist}}</option>\n              </select><br/><br/>\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"addPatient()\" value=\"Submit\">Submit</button>\n  </form>\n  <h6>Patient List</h6>\n  <div id=\"doctorList\" class=\"doctor-list custom-card\">\n    <h4 *ngIf=\"patientNoData\">No patient allocated</h4>\n    <div *ngIf=\"!patientNoData\">\n    <div id=\"frame\" *ngFor=\"let patient of patientList\">\n    <form class=\"row\">\n        <div class=\"form-group col-xs-3 col-sm-3 col-md-3 col-lg-3 col-null\">\n            <input type=\"text\" class=\"form-control\" name=\"name\" [(ngModel)]=\"patient.name\">\n            </div>\n            <div class=\"form-group col-xs-3 col-sm-3 col-md-3 col-lg-3 col-null\">\n                <input type=\"text\" class=\"form-control\" name=\"disease\" [(ngModel)]=\"patient.disease\">\n                </div>\n                <div class=\"form-group col-xs-3 col-sm-3 col-md-3 col-lg-3 col-null\">\n                    <input type=\"text\" class=\"form-control\" name=\"history\" [(ngModel)]=\"patient.history\">\n                    </div>\n            <div class=\"form-group col-xs-3 col-sm-3 col-md-3 col-lg-3\">\n                <button type=\"button\" class=\"btn btn-warning\" (click)=\"updatePatient(patient)\" value=\"Submit\">Update</button>&nbsp;\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"deletePatient(patient)\" value=\"Submit\">Delete</button>\n            </div>\n    </form>\n  </div>\n</div>\n  </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DoctorServiceService {\n  baseUrl:any = \"http://localhost:8080/doctor/\";\n  constructor(private http: HttpClient) {}\n  \n  getDoctorList(){\n    return this.http.get(`${this.baseUrl}details`);\n  }\n\n  addDoctor(data){\n    return this.http.post(`${this.baseUrl}add`,data);\n  }\n\n  updateDoctor(data){\n    return this.http.post(`${this.baseUrl}update`,data);\n  }\n\n  deleteDoctor(id){\n    return this.http.get(`${this.baseUrl}delete?id=${id}`);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientServiceService {\n  baseUrl:any = \"http://localhost:8080/patient/\";\n  constructor(private http: HttpClient) {}\n  \n  getPatientList(){\n    return this.http.get(`${this.baseUrl}details`);\n  }\n\n  addPatient(data){\n    return this.http.post(`${this.baseUrl}add`,data);\n  }\n\n  updatePatient(data){\n    return this.http.post(`${this.baseUrl}update`,data);\n  }\n\n  deletePatient(id){\n    return this.http.get(`${this.baseUrl}delete?id=${id}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}